{"version":3,"file":"ej2-treegrid.min.js","sources":["../../src/treegrid/utils.js","../../src/treegrid/actions/crud-actions.js","../../src/treegrid/models/column.js","../../src/treegrid/models/filter-settings.js","../../src/treegrid/models/textwrap-settings.js","../../src/treegrid/actions/logger.js","../../src/treegrid/actions/clipboard.js","../../src/treegrid/base/constant.js","../../src/treegrid/actions/selection.js","../../src/treegrid/actions/print.js","../../src/treegrid/models/search-settings.js","../../src/treegrid/models/selection-settings.js","../../src/treegrid/renderer/render.js","../../src/treegrid/base/data.js","../../src/treegrid/enum.js","../../src/treegrid/models/page-settings.js","../../src/treegrid/models/summary.js","../../src/treegrid/models/edit-settings.js","../../src/treegrid/models/sort-settings.js","../../src/treegrid/models/infinite-scroll-settings.js","../../src/treegrid/base/treegrid.js","../../src/treegrid/actions/reorder.js","../../src/treegrid/actions/resize.js","../../src/treegrid/actions/rowdragdrop.js","../../src/treegrid/models/rowdrop-settings.js","../../src/treegrid/renderer/virtual-row-model-generator.js","../../src/treegrid/actions/filter.js","../../src/treegrid/actions/excel-export.js","../../src/treegrid/actions/pdf-export.js","../../src/treegrid/actions/page.js","../../src/treegrid/actions/toolbar.js","../../src/treegrid/actions/summary.js","../../src/treegrid/actions/sort.js","../../src/treegrid/actions/column-menu.js","../../src/treegrid/actions/context-menu.js","../../src/treegrid/actions/batch-edit.js","../../src/treegrid/actions/edit.js","../../src/treegrid/actions/command-column.js","../../src/treegrid/actions/detail-row.js","../../src/treegrid/renderer/virtual-tree-content-render.js","../../src/treegrid/actions/virtual-scroll.js","../../src/treegrid/actions/freeze-column.js","../../src/treegrid/actions/column-chooser.js","../../src/treegrid/actions/infinite-scroll.js","../../src/global.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Specifies whether remote data binding\n */\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\n/**\n * @param {TreeGrid | IGrid} parent - Tree Grid or Grid instance\n * @returns {boolean} - Returns whether custom binding\n */\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether checkbox column is enabled\n */\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether filtering and searching done\n */\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Object} records - Define records for which parent records has to be found\n * @hidden\n * @returns {Object} - Returns parent records collection\n */\nexport function findParentRecords(records) {\n    var datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns the expand status of record\n * @param {ITreeData} record - Define the record for which expand status has be found\n * @param {ITreeData[]} parents - Parent Data collection\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @param {ITreeData} records - Define the record for which child records has to be found\n * @returns {Object[]} - Returns child records collection\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\n/**\n * @param {TreeGrid} parent - Tree Grid instance\n * @returns {boolean} - Returns whether local data binding\n */\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\n/**\n * @param {Object[]} array - Defines the array to be cloned\n * @returns {Object[]} - Returns cloned array collection\n */\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\n/**\n * @param {ITreeData} value - Defined the dirty data to be cleaned\n * @returns {ITreeData} - Returns cleaned original data\n */\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    delete value.taskData;\n    delete value.uniqueID;\n    return value;\n}\n/**\n * @param {TreeGrid} parent - TreeGrid instance\n * @param {string} value - IdMapping field name\n * @param {boolean} requireFilter - Specified whether treegrid data is filtered\n * @returns {ITreeData} - Returns IdMapping matched record\n */\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n/**\n * @param {HTMLTableRowElement} el - Row element\n * @returns {boolean} - Returns whether hidden\n */\nexport function isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\n/**\n * Performs CRUD update to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {string} columnName - Column field name\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = modifiedData[k].taskData ? Object.keys(modifiedData[k].taskData) :\n                Object.keys(modifiedData[k]);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (Object.prototype.hasOwnProperty.call(treeData[i], keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                    if (editedData && editedData.taskData) {\n                                        editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]];\n                                    }\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!Object.prototype.hasOwnProperty.call(treeData[i], control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i + 1], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                if (!isNullOrUndefined(originalData.parentItem)) {\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\n/**\n * Performs Add action to Tree Grid data source\n *\n * @param {{value: ITreeData, action: string }} details - Gets modified record value and CRUD action type\n * @param {TreeGrid} details.value - Gets modified record value\n * @param {string} details.action - CRUD action type\n * @param {Object[]} treeData - Tree Grid data source\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Denotes whether Self Referential data binding\n * @param {number} addRowIndex - New add row index\n * @param {number} selectedIndex - Selected Row index\n * @param {ITreeData} addRowRecord - Newly added record\n * @returns {void}\n */\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n                var internalProperty = 'internalProperties';\n                control.editModule[internalProperty].taskData = value;\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\n/**\n * @param {ITreeData[]} childRecords - Child Records collection\n * @param {Object} modifiedData - Modified data in crud action\n * @param {string} action - crud action type\n * @param {string} key - Primary key field name\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether Self Referential data binding\n * @param {ITreeData} originalData - Non updated data from data source, of edited data\n * @param {string} columnName - column field name\n * @returns {boolean} Returns whether child records exists\n */\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (Object.prototype.hasOwnProperty.call(childRecords[j], keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                        if (control.grid.editSettings.mode === 'Normal' && control.editSettings.mode === 'Cell') {\n                            var editModule = 'editModule';\n                            control.grid.editModule[editModule].editRowIndex = modifiedData.index;\n                            control.grid.editModule[editModule].updateCurrentViewData(modifiedData);\n                        }\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!Object.prototype.hasOwnProperty.call(childRecords[j], control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    if (!isNullOrUndefined(originalData.parentItem)) {\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n            }\n            else {\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\n/**\n * @param {string} key - Primary key field name\n * @param {ITreeData} record - Parent Record which has to be updated\n * @param {string} action - CRUD action type\n * @param {TreeGrid} control - Tree Grid instance\n * @param {boolean} isSelfReference - Specified whether self referential data binding\n * @param {ITreeData} child - Specifies child record\n * @returns {void}\n */\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        if (!isNullOrUndefined(index_1)) {\n            record = currentRecords[index_1];\n        }\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!Object.prototype.hasOwnProperty.call(record, 'childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!Object.prototype.hasOwnProperty.call(record, control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            var index_2 = control.treeColumnIndex;\n            if (control.allowRowDragAndDrop && control.enableImmutableMode) {\n                index_2 = index_2 + 1;\n            }\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[index_2] ? row.cells[index_2]\n                    : movableRow.cells[index_2 - control.getFrozenColumns()],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         *\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         *\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         *\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         *\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         *\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         *\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         *\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         *\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the Tree Grid predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Logger as GridLogger, Grid, detailLists } from '@syncfusion/ej2-grids';\n/**\n * Logger module for TreeGrid\n *\n * @hidden\n */\nvar DOC_URL = 'https://ej2.syncfusion.com/documentation/treegrid';\nvar BASE_DOC_URL = 'https://ej2.syncfusion.com/documentation';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar WARNING = '[EJ2TreeGrid.Warning]';\nvar ERROR = '[EJ2TreeGrid.Error]';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nvar INFO = '[EJ2TreeGrid.Info]';\nvar isRowDDEnabled = false;\nvar Logger = /** @class */ (function (_super) {\n    __extends(Logger, _super);\n    function Logger(parent) {\n        var _this = this;\n        Grid.Inject(GridLogger);\n        _this = _super.call(this, parent) || this;\n        return _this;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    Logger.prototype.getModuleName = function () {\n        return 'logger';\n    };\n    Logger.prototype.log = function (types, args) {\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        for (var i = 0; i < type.length; i++) {\n            var item = detailLists[type[i]];\n            var cOp = item.check(args, this.parent);\n            if (cOp.success) {\n                var message = item.generateMessage(args, this.parent, cOp.options);\n                message = message.replace('EJ2Grid', 'EJ2TreeGrid').replace('* Hierarchy Grid', '').replace('* Grouping', '');\n                if (isRowDDEnabled && type[i] === 'primary_column_missing') {\n                    message = message.replace('Editing', 'Row DragAndDrop');\n                    isRowDDEnabled = false;\n                }\n                var index = message.indexOf('https');\n                var gridurl = message.substring(index);\n                if (type[i] === 'module_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/modules');\n                }\n                else if (type[i] === 'primary_column_missing' || type[i] === 'selection_key_missing') {\n                    message = message.replace(gridurl, BASE_DOC_URL + '/api/treegrid/column/#isprimarykey');\n                }\n                else if (type[i] === 'grid_remote_edit') {\n                    message = message.replace(gridurl, DOC_URL + '/edit');\n                }\n                else if (type[i] === 'virtual_height') {\n                    message = message.replace(gridurl, DOC_URL + '/virtual');\n                }\n                else if (type[i] === 'check_datasource_columns') {\n                    message = message.replace(gridurl, DOC_URL + '/columns');\n                }\n                else if (type[i] === 'locale_missing') {\n                    message = message.replace(gridurl, DOC_URL + '/global-local/#localization');\n                }\n                if (type[i] === 'datasource_syntax_mismatch') {\n                    if (!isNullOrUndefined(this.treeGridObj) && !isNullOrUndefined(this.treeGridObj.dataStateChange)) {\n                        // eslint-disable-next-line no-console\n                        console[item.logType](message);\n                    }\n                }\n                else {\n                    // eslint-disable-next-line no-console\n                    console[item.logType](message);\n                }\n            }\n        }\n    };\n    Logger.prototype.treeLog = function (types, args, treeGrid) {\n        this.treeGridObj = treeGrid;\n        if (!(types instanceof Array)) {\n            types = [types];\n        }\n        var type = types;\n        if (treeGrid.allowRowDragAndDrop && !treeGrid.columns.filter(function (column) { return column.isPrimaryKey; }).length) {\n            isRowDDEnabled = true;\n            this.log('primary_column_missing', args);\n        }\n        for (var i = 0; i < type.length; i++) {\n            var item = treeGridDetails[type[i]];\n            var cOp = item.check(args, treeGrid);\n            if (cOp.success) {\n                var message = item.generateMessage(args, treeGrid, cOp.options);\n                // eslint-disable-next-line no-console\n                console[item.logType](message);\n            }\n        }\n    };\n    return Logger;\n}(GridLogger));\nexport { Logger };\nexport var treeGridDetails = {\n    // eslint-disable-next-line camelcase\n    mapping_fields_missing: {\n        type: 'mapping_fields_missing',\n        logType: 'error',\n        check: function (args, parent) {\n            var opt = { success: false };\n            if ((isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.childMapping)\n                && isNullOrUndefined(parent.parentIdMapping)) ||\n                (!isNullOrUndefined(parent.idMapping) && isNullOrUndefined(parent.parentIdMapping)) ||\n                (isNullOrUndefined(parent.idMapping) && !isNullOrUndefined(parent.parentIdMapping))) {\n                opt = { success: true };\n            }\n            return opt;\n        },\n        generateMessage: function () {\n            return ERROR + ':' + ' MAPPING FIELDS MISSING \\n' + 'One of the following fields is missing. It is ' +\n                'required for the hierarchical relationship of records in TreeGrid:\\n' +\n                '* childMapping\\n' + '* idMapping\\n' + '* parentIdMapping\\n' +\n                'Refer to the following documentation links for more details.\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#childmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#idmapping\") + '\\n' +\n                (BASE_DOC_URL + \"/api/treegrid#$parentidmapping\");\n        }\n    }\n};\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n *\n * @hidden\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns clipboard module name\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    /**\n     * To destroy the clipboard\n     *\n     * @returns {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","import { isNullOrUndefined, removeClass } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n *\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Selection module name\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        var checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (Object.prototype.hasOwnProperty.call(flatRecord, keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            for (var i = 0; i < childRecords.length; i++) {\n                var currentRecord = getParentData(this.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = isRemoteData(this.parent) ? this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n *\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Print module name\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { templateCompiler, extend } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n *\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n        this.parent.grid.on('reactTemplateRender', this.reactTemplateRender, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     *\n     * @param {RowDataBoundEventArgs} args - Row details before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     *\n     * @param {QueryCellInfoEventArgs} args - Cell detail before its bound to DOM\n     * @returns {void}\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByUid(args.column.uid);\n        var summaryRow = data.isSummaryRow;\n        var frozenColumns = this.parent.getFrozenColumns();\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex && (args.requestType === 'add' || args.requestType\n            === 'rowDragAndDrop' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                addClass([expandIcon], (expand) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        else if (this.templateResult) {\n            this.templateResult = null;\n        }\n        if (frozenColumns > this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === frozenColumns) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns < this.parent.treeColumnIndex && frozenColumns > 0 &&\n            (grid.getColumnIndexByUid(args.column.uid) === frozenColumns\n                || grid.getColumnIndexByUid(args.column.uid) === frozenColumns - 1)) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (frozenColumns === this.parent.treeColumnIndex && frozenColumns > 0 &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            if (args.cell.querySelector('.e-treecell') != null) {\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData;\n            }\n            else {\n                args.cell.innerHTML = summaryData;\n            }\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement) {\n        var columnModel = getValue('columnModel', this.parent);\n        var treeColumn = columnModel[this.parent.treeColumnIndex];\n        var templateFn = 'templateFn';\n        var colindex = args.column.index;\n        if (isNullOrUndefined(treeColumn.field)) {\n            args.cell.setAttribute('aria-colindex', colindex + '');\n        }\n        if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n            args.column.template = treeColumn.template;\n            args.column[templateFn] = templateCompiler(args.column.template);\n            args.cell.classList.add('e-templatecell');\n        }\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            var tempID = this.parent.element.id + args.column.uid;\n            if (treeColumn.field === args.column.field && !isNullOrUndefined(treeColumn.template)) {\n                var portals = 'portals';\n                var renderReactTemplates = 'renderReactTemplates';\n                if (this.parent.isReact && typeof (args.column.template) !== 'string') {\n                    args.column[templateFn](args.data, this.parent, 'template', tempID, null, null, cellElement);\n                    if (isNullOrUndefined(this.parent.grid[portals])) {\n                        this.parent.grid[portals] = this.parent[portals];\n                    }\n                    this.parent[renderReactTemplates]();\n                }\n                else {\n                    var str = 'isStringTemplate';\n                    var result = args.column[templateFn](extend({ 'index': '' }, args.data), this.parent, 'template', tempID, this.parent[str]);\n                    appendChildren(cellElement, result);\n                }\n                delete args.column.template;\n                delete args.column[templateFn];\n                args.cell.innerHTML = '';\n            }\n            else {\n                for (var i = 0; i < len; len = args.cell.children.length) {\n                    cellElement.appendChild(args.cell.children[i]);\n                }\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.reactTemplateRender = function (args) {\n        var renderReactTemplates = 'renderReactTemplates';\n        var portals = 'portals';\n        this.parent[portals] = args;\n        this.parent.notify('renderReactTemplate', this.parent[portals]);\n        this.parent[renderReactTemplates]();\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n        this.parent.grid.off('reactTemplateRender', this.reactTemplateRender);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired, getExpandStatus } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n *\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {boolean} -Returns whether remote data binding\n     */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {Object} data - Provide tree grid datasource to convert to flat data\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                if (!this.parent.hasChildMapping) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        if (!this.parent.idMapping) {\n            this.hierarchyData = data;\n        }\n        else {\n            for (var i = 0; i < Object.keys(data).length; i++) {\n                var tempData = data[i];\n                this.hierarchyData.push(extend({}, tempData));\n                if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                    this.taskIds.push(tempData[this.parent.idMapping]);\n                }\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     *\n     * @param {BeforeDataBoundArgs} args - contains data before its bounds to tree grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        if (!this.parent.hasChildMapping && !this.parentItems.length && !this.parent.loadChildOnDemand) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isCountRequired(this.parent) && records[rec].hasChildRecords && this.parent.initialRender) {\n                        records[rec].expanded = false;\n                    }\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] ||\n                            this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     *\n     * @param {{record: ITreeData, rows: HTMLTableRowElement[], parentRow: HTMLTableRowElement}} rowDetails - Row details for which child rows has to be fetched\n     * @param {ITreeData} rowDetails.record - current expanding record\n     * @param {HTMLTableRowElement[]} rowDetails.rows - Expanding Row element\n     * @param {HTMLTableRowElement} rowDetails.parentRow  - Curent expanding row element\n     * @param {boolean} isChild - Specified whether current record is already a child record\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                rowDetails.rows[i].style.display = 'table-row';\n                if (this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData.slice();\n            var inx = datas.indexOf(rowDetails.record);\n            if (inx === -1) {\n                _this.parent.grid.getRowsObject().forEach(function (rows) {\n                    if (rows.data.uniqueID === rowDetails.record.uniqueID) {\n                        inx = rows.index;\n                    }\n                });\n            }\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            var notifyArgs = { index: inx, childData: result };\n            if (_this.parent.enableInfiniteScrolling) {\n                _this.parent.notify('infinite-remote-expand', notifyArgs);\n            }\n            else {\n                getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            }\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!Object.prototype.hasOwnProperty.call(currentData, 'level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     *\n     * @param {BeforeDataBoundArgs} args - data details to be processed before binding to grid\n     * @hidden\n     * @returns {void}\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var qry = new Query();\n        var gridQuery = getObject('query', args);\n        var filterQuery;\n        var searchQuery;\n        if (!isNullOrUndefined(gridQuery)) {\n            filterQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            searchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n        }\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0) || (!isNullOrUndefined(gridQuery) &&\n            (filterQuery.length || searchQuery.length))) {\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery_1 = getObject('query', args);\n            if (isNullOrUndefined(gridQuery_1)) {\n                gridQuery_1 = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = this.parent.parentData;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.grid.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && isOffline(this.parent) ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if ((this.parent.enableVirtualization || this.parent.enableInfiniteScrolling) && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            var actArgs = this.parent.enableInfiniteScrolling ? args : getValue('actionArgs', args);\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: actArgs });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var isPdfExport = 'isPdfExport';\n        var isCollapsedStatePersist = 'isCollapsedStatePersist';\n        if ((isPrinting === true || (args[isPdfExport] && (isNullOrUndefined(args[isCollapsedStatePersist])\n            || args[isCollapsedStatePersist]))) && this.parent.printMode === 'AllPages') {\n            var actualResults = [];\n            for (var i = 0; i < results.length; i++) {\n                var expandStatus = getExpandStatus(this.parent, results[i], this.parent.parentData);\n                if (expandStatus) {\n                    actualResults.push(results[i]);\n                }\n            }\n            results = actualResults;\n            count = results.length;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n *\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n *\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * Custom format function\n     *\n     * @hidden\n     * @param {string} cultureName - culture name to format\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @param {NumberFormatOptions | DateFormatOptions} format - formatting options for number and date values\n     * @hidden\n     * @returns {Function} - return formatter function\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {Function} - Returns formatter function\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @param {Object} helper - Specified the helper\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @param {CellType} type - specifies the cell type\n     * @returns {Object} returns the object\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @param {Object} prop - updates aggregate properties without change detection\n     * @hidden\n     * @returns {void}\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowNextRowEdit\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the infinite scroll behavior of Tree Grid.\n */\nvar InfiniteScrollSettings = /** @class */ (function (_super) {\n    __extends(InfiniteScrollSettings, _super);\n    function InfiniteScrollSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], InfiniteScrollSettings.prototype, \"enableCache\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"maxBlocks\", void 0);\n    __decorate([\n        Property(3)\n    ], InfiniteScrollSettings.prototype, \"initialBlocks\", void 0);\n    return InfiniteScrollSettings;\n}(ChildProperty));\nexport { InfiniteScrollSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { Logger as TreeLogger } from '../actions/logger';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired, findChildrenRecords } from '../utils';\nimport { Grid, Logger } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\nimport { isHidden } from '../utils';\nimport { editAction } from '../actions/crud-actions';\nimport { InfiniteScrollSettings } from '../models/infinite-scroll-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        _this.objectEqualityChecker = function (old, current) {\n            if (old) {\n                var keys = Object.keys(old);\n                var isEqual = true;\n                for (var i = 0; i < keys.length; i++) {\n                    if (old[keys[i]] !== current[keys[i]]) {\n                        isEqual = false;\n                        break;\n                    }\n                }\n                return isEqual;\n            }\n            else {\n                return false;\n            }\n        };\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        var logger = 'Logger';\n        if (!isNullOrUndefined(_this.injectedModules[logger])) {\n            Grid.Inject(Logger);\n        }\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     *\n     * @param  {ExcelExportProperties | TreeGridExcelExportProperties} excelExportProperties - Defines the export properties of the Tree Grid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @blazorType void\n     * @returns {Promise<any>} - Returns promise object of export action\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     *\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    /* eslint-disable */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, isMultipleExport, workbook, isBlob) {\n        /* eslint-enable */\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     *\n     * @param {PdfExportProperties | TreeGridPdfExportProperties} pdfExportProperties - Defines the export properties of the Tree Grid.\n     * @param {boolean} isMultipleExport - Define to enable multiple export.\n     * @param {Object} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @returns {Promise<any>} - Returns promise object of export action\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns TreeGrid module name\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     *\n     * @param {string} field - Defines the column field name to remove sort.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     *\n     * @param  {string} searchString - Defines the key.\n     * @returns {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     *\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @returns {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     *\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n        var locale = L10n.locale;\n        var localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            var target = void 0;\n            var parentTarget = void 0;\n            var column = void 0;\n            var row = void 0;\n            var summaryElement = void 0;\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    target = e.target;\n                    column = target.closest('.e-rowcell');\n                    row = column.closest('tr');\n                    if (row !== null && row !== undefined) {\n                        this.expandCollapseRequest(row.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findnextRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row_1 = summaryElement.children[cellIndex];\n                        addClass([row_1], 'e-focused');\n                        addClass([row_1], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    parentTarget = e.target.parentElement;\n                    summaryElement = this.findPreviousRowElement(parentTarget);\n                    if (summaryElement !== null) {\n                        var rIndex = summaryElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary\n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     *\n     * @returns {ModuleDeclaration[]} - Returns TreeGrid modules collection\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n        if (this.enableInfiniteScrolling) {\n            modules.push({\n                member: 'infiniteScroll',\n                args: [this]\n            });\n        }\n        modules.push({\n            member: 'logger',\n            args: [this.grid]\n        });\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * Logs tree grid error message on console\n     *\n     * @param {string | string[]} types - Tree Grid error type\n     * @param {object} args - Error details\n     * @hidden\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.log = function (types, args) {\n        if (this.loggerModule) {\n            this.loggerModule.treeLog(types, args, this);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        if (this.isReact) {\n            this.grid.isReact = true;\n        }\n        createSpinner({ target: this.element }, this.createElement);\n        this.log(['mapping_fields_missing']);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        this.loadGrid();\n        if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n            this.grid.rowDropSettings.targetID += '_gridcontrol';\n        }\n        this.addListener();\n        var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n        addClass([this.element], 'e-treegrid');\n        if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n            this.element.style.height = this.height;\n        }\n        if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n            this.element.style.width = this.width;\n        }\n        this.element.appendChild(gridContainer);\n        var gridRequiredModules = this.grid.requiredModules;\n        this.grid.requiredModules = function () {\n            var modules = [];\n            modules = gridRequiredModules.apply(this);\n            for (var i = 0; i < modules.length; i++) {\n                if (modules[i].member === 'virtualscroll') {\n                    modules[i].member = 'treeVirtualScroll';\n                }\n            }\n            return modules;\n        };\n        this.grid.appendTo(gridContainer);\n        this.wireEvents();\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            var portals = 'portals';\n            if (!(_this.isReact && isNullOrUndefined(_this[portals]))) {\n                _this.clearTemplate(args, index);\n            }\n        };\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (isCountRequired(this)) {\n            data = getValue('result', data);\n        }\n        if (data instanceof Array && data.length > 0 && Object.prototype.hasOwnProperty.call(data[0], 'level')) {\n            this.flatData = data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n        this.grid.infiniteScrollSettings = this.infiniteScrollSettings;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.enableImmutableMode = this.enableImmutableMode;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        this.grid.rowSelecting = function (args) {\n            if (!isNullOrUndefined(args.target) && (args.target.classList.contains('e-treegridexpand')\n                || args.target.classList.contains('e-treegridcollapse') || args.target.classList.contains('e-summarycell'))) {\n                args.cancel = true;\n                return;\n            }\n            _this.trigger(events.rowSelecting, args);\n        };\n        this.grid.rowSelected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            _this.grid.on('initial-end', _this.afterGridRender, _this);\n            if (!isNullOrUndefined(_this.loggerModule)) {\n                var loggerModule = 'loggerModule';\n                _this.loggerModule = _this.grid[loggerModule] = new TreeLogger(_this.grid);\n            }\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.lastRowBorder = function (visiblerow, isAddBorder) {\n        for (var j = 0; j < visiblerow.cells.length; j++) {\n            if (isAddBorder) {\n                addClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n            else {\n                removeClass([visiblerow.cells[j]], 'e-lastrowcell');\n            }\n        }\n    };\n    TreeGrid.prototype.isPixelHeight = function () {\n        if (this.height !== 'auto' && this.height.toString().indexOf('%') === -1) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate();\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            if (_this.isPixelHeight() && _this.initialRender) {\n                var rows = _this.getContentTable().rows;\n                var totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        if (totalRows[i].nextElementSibling) {\n                            _this.lastRowBorder(totalRows[i], true);\n                        }\n                        break;\n                    }\n                }\n            }\n            _this.trigger(events.dataBound, args);\n            _this.initialRender = false;\n        };\n        // eslint-disable-next-line\n        var treeGrid = this;\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (((isRemoteData(treeGrid) && !isOffline(treeGrid)) || isCountRequired(this)) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = treeGrid.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            if (treeGrid.enableImmutableMode) {\n                args.result = args.result.slice();\n            }\n            if (treeGrid.initialRender) {\n                this.contentModule.objectEqualityChecker = treeGrid.objectEqualityChecker;\n            }\n            // treeGrid.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n        this.grid.log = function (type, args) {\n            if (_this.loggerModule) {\n                _this.loggerModule.log(type, args);\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (!isNullOrUndefined(args.row) && args.row.classList.contains('e-summaryrow')) {\n                args.cancel = true;\n                return;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function () {\n        this.treeColumnRowTemplate();\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        // eslint-disable-next-line\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        this.grid.rowDragStartHelper = function (args) {\n            _this.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            _this.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowdraging, args);\n            _this.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            _this.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     *\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            var record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit.allowNextRowEdit = this.editSettings.allowNextRowEdit;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - returns context menu items\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     *\n     * @hidden\n     * @returns {Object[]} - Returns toolbar items\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            var tooltipText = void 0;\n            for (var i = 0; i < this.toolbar.length; i++) {\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        tooltipText = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltipText,\n                            tooltipText: tooltipText, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        tooltipText = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        tooltipText = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    TreeGrid.prototype.getGridColumns = function (columns, isEmptyColumnModel, index) {\n        if (isEmptyColumnModel === void 0) { isEmptyColumnModel = true; }\n        if (index === void 0) { index = 0; }\n        var column = columns;\n        var stackedColumn = 'columns';\n        if (isEmptyColumnModel) {\n            this.columnModel = [];\n        }\n        var treeGridColumn;\n        var gridColumn;\n        index = index == 0 ? -1 : index;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            index = index + 1;\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    if (index === this.treeColumnIndex && prop === 'template') {\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else if (prop === 'columns') {\n                        gridColumn[prop] = this.getGridColumns(column[i][prop], false, index);\n                        treeGridColumn[prop] = column[i][prop];\n                    }\n                    else {\n                        gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                    }\n                }\n            }\n            if (!treeGridColumn[stackedColumn]) {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * @param {TreeGridModel} newProp - properties details which has to be modified\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.onPropertyChanged = function (newProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    this.grid.columns = this.getGridColumns(this.columns);\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    if (!this.initialRender) {\n                        this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    }\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'enableInfiniteScrolling':\n                    this.grid.enableInfiniteScrolling = this.enableInfiniteScrolling;\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            var data = this.dataSource;\n                            this.grid.dataSource = !(data instanceof DataManager) ?\n                                this.flatData : new DataManager(data.dataSource, data.defaultQuery, data.adaptor);\n                        }\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.isDataSourceChanged = true;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.grid.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'enableImmutableMode':\n                    this.grid.enableImmutableMode = this.enableImmutableMode;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.grid.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.grid.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     *\n     * @method dataBind\n     * @returns {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        this.grid.dataBind();\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - Returns persist properties details\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     *\n     * @returns {HTMLTableRowElement[]} - Returns row elements collection\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     *\n     * @returns {Element} - Returns pager element\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     *\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     * @returns {void}\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     *\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     *\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            if (!isNullOrUndefined(index)) {\n                var griddata = this.grid.getCurrentViewRecords()[index];\n                extend(griddata, data);\n                this.grid.editModule.updateRow(index, griddata);\n            }\n            else {\n                this.grid.editModule.updateRow(index, data);\n            }\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     *\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     *\n     * @param {HTMLTableRowElement} row - Defines the table row to be edited.\n     * @returns {void}\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     *\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     * @returns {void}\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param {number} x - Defines the X axis.\n     * @param {number} y - Defines the Y axis.\n     * @returns {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     *\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     * @returns {void}\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     *\n     * @returns {string[]} - Returns primary key collection\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n        var rowIndex = this.grid.getRowIndexByPrimaryKey(key);\n        var record = this.getCurrentViewRecords()[rowIndex];\n        if (!isNullOrUndefined(record)) {\n            editAction({ value: record, action: 'edit' }, this, this.isSelfReference, record.index, this.grid.selectedRowIndex, field);\n        }\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     * @returns {void}\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns cell element in grid content\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        return iterateArrayOrObject(this.columnModel, function (item) {\n            if (item.field === field) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets a column by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {Column} - Returns tree grid column\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        return iterateArrayOrObject(this.grid.columns, function (item) {\n            if (item.uid === uid) {\n                return item;\n            }\n            return undefined;\n        })[0];\n    };\n    /**\n     * Gets the collection of column fields.\n     *\n     * @returns {string[]} - Returns column field name as collection\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content div element\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     *\n     * @returns {Element} - Returns footer content table element\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     *\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     *\n     * @param  {number} index - Specifies the column index.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     *\n     * @param {string} uid - Specifies the column uid.\n     * @returns {Element} - Returns column header element\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     *\n     * @param  {string} uid - Specifies the column UID.\n     * @returns {number} - Returns column index\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     *\n     * @param {boolean} isRefresh - Defined whether to update DOM\n     * @returns {Column[]} - Returns treegrid columns collection\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        this.updateColumnModel(this.grid.getColumns(isRefresh));\n        return this.columnModel;\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        var temp;\n        var field;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        if (this.treeColumnIndex !== -1 && this.columnModel[this.treeColumnIndex] &&\n            !isNullOrUndefined(this.columnModel[this.treeColumnIndex].template)) {\n            temp = this.columnModel[this.treeColumnIndex].template;\n            field = this.columnModel[this.treeColumnIndex].field;\n        }\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                gridColumn[prop] = gridColumns[i][prop];\n            }\n            this.columnModel.push(new Column(gridColumn));\n            if (field === this.columnModel[i].field && (!isNullOrUndefined(temp) && temp !== '')) {\n                this.columnModel[i].template = temp;\n            }\n        }\n        var merge = 'deepMerge';\n        this[merge] = ['columns']; // Workaround for blazor updateModel\n        if (this.grid.columns.length !== this.columnModel.length) {\n            stackedHeader = true;\n        }\n        if (!stackedHeader) {\n            this.setProperties({ columns: this.columnModel }, true);\n        }\n        this[merge] = undefined; // Workaround for blazor updateModel\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     *\n     * @returns {Element} - Return tree grid content element\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     *\n     * @returns {Element} - Returns content table element\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     *\n     * @returns {Element[]} - Returns row elements\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     *\n     * @returns {Object[]} - Returns current view records\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     *\n     * @returns {Object} - Returns batch changes\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     *\n     * @returns {Element} - Returns Header content element\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     *\n     * @returns {Element} - Return header table element\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns row element\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     *\n     * @param {Element | EventTarget} target - Target row element\n     * @returns {RowInfo} - Returns row information in a JSON object\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     *\n     * @param  {string} field - Specifies the column name.\n     * @returns {string} - Returns unique id based on column field name given\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     *\n     * @returns {Column[]} - Returns visible columns collection\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.uniqueIDCollection = {};\n        this.convertTreeData(this.dataSource);\n        if (!isCountRequired(this)) {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ? this.flatData :\n                new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     *\n     * @returns {Object[]} - Returns records that has been checked\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the visible records corresponding to rows visually displayed.\n     *\n     * @returns {Object[]} - Returns visible records based on collapse state of rows\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getVisibleRecords = function () {\n        var visibleRecords = [];\n        var currentViewRecords = this.getCurrentViewRecords();\n        if (!this.allowPaging) {\n            for (var i = 0; i < currentViewRecords.length; i++) {\n                visibleRecords.push(currentViewRecords[i]);\n                if (!currentViewRecords[i].expanded) {\n                    i += findChildrenRecords(currentViewRecords[i]).length;\n                }\n            }\n        }\n        else {\n            visibleRecords = currentViewRecords;\n        }\n        return visibleRecords;\n    };\n    /**\n     * Get the indexes of checked rows.\n     *\n     * @returns {number[]} - Returns checked row indexes\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     *\n     * @param {number[]} indexes - row indexes\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     *\n     * @param {boolean} refreshUI - Defined whether to refresh the DOM\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     *\n     * @param {HTMLElement} target - Expand collapse icon cell as target element\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (this.enableImmutableMode && Object.keys(record).length === 0) {\n                record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            }\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     *\n     * @param {HTMLTableRowElement} row - Expands the given row\n     * @param {Object} record - Expands the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        if (!isNullOrUndefined(row) && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                var children = 'Children';\n                if (!(isRemoteData(_this) && !isOffline(_this)) && (!isCountRequired(_this) || !isNullOrUndefined(record[children]))) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.setHeightForFrozenContent = function () {\n        if (this.grid.getFrozenColumns() > 0) {\n            this.grid.contentModule.refreshScrollOffset();\n        }\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     *\n     * @param {HTMLTableRowElement} row - Collapse the given row\n     * @param {Object} record - Collapse the given record\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.setHeightForFrozenContent();\n                    _this.trigger(events.collapsed, collapseArgs);\n                    if (_this.enableInfiniteScrolling) {\n                        var scrollHeight = _this.grid.getContent().firstElementChild.scrollHeight;\n                        var scrollTop = _this.grid.getContent().firstElementChild.scrollTop;\n                        if ((scrollHeight - scrollTop) < _this.grid.getRowHeight() + +_this.height) {\n                            _this.grid.getContent().firstElementChild.scrollBy(0, _this.grid.getRowHeight());\n                        }\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     *\n     * @param {number} level - Expands the parent rows at given level\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) {\n            return e.level === level && e.hasChildRecords;\n        });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     *\n     * @param {number} level - Define the parent row level which needs to be collapsed\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n        if (!this.grid.contentModule.isDataSourceChanged && this.enableVirtualization && this.getRows()\n            && this.parentData.length === this.getRows().length) {\n            var endIndex = 'endIndex';\n            this.grid.contentModule.startIndex = -1;\n            this.grid.contentModule[endIndex] = -1;\n        }\n    };\n    /**\n     * Expands All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        if (!rows.length && this.getRows().length) {\n            rows.push(this.getRows()[0]);\n        }\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[0]);\n                }\n                else {\n                    this.expandRow(rows[0]);\n                }\n            }\n            else if (this.allowPaging) {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                if (action === 'collapse') {\n                    this.collapseRow(rows[i]);\n                }\n                else {\n                    this.expandRow(rows[i]);\n                }\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var targetEle;\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference && isCountRequired(this) && !childRecords.length) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridexpand')) {\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild || isCountRequired(this)) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                if (!isNullOrUndefined(row)) {\n                    targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                }\n                if (isChild && !isNullOrUndefined(record[this.expandStateMapping]) &&\n                    !record[this.expandStateMapping] && isNullOrUndefined(targetEle)) {\n                    targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                }\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                if (!targetEle.classList.contains('e-treegridcollapse')) {\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record);\n            }\n            else {\n                if ((!isCountRequired(this) || childRecords.length) || action === 'collapse') {\n                    this.localExpand(action, row, record);\n                }\n            }\n            if (this.isPixelHeight() && !row.cells[0].classList.contains('e-lastrowcell')) {\n                var totalRows = this.getRows();\n                var rows = this.getContentTable().rows;\n                totalRows = [].slice.call(rows);\n                for (var i = totalRows.length - 1; i > 0; i--) {\n                    if (!isHidden(totalRows[i])) {\n                        var table = this.getContentTable();\n                        var sHeight = table.scrollHeight;\n                        var clientHeight = this.getContent().clientHeight;\n                        this.lastRowBorder(totalRows[i], sHeight <= clientHeight);\n                        break;\n                    }\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function () {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ? record[_this.childMapping].length > childData.length ?\n                    record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.grid.refresh();\n            _this.setHeightForFrozenContent();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.setHeightForFrozenContent();\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.setHeightForFrozenContent();\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record) {\n        var rows;\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        if (this.isPixelHeight() && row.cells[0].classList.contains('e-lastrowcell')) {\n            this.lastRowBorder(row, false);\n        }\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var primaryKeyField = this.getPrimaryKeyFieldNames()[0];\n        if (this.enableImmutableMode && !this.allowPaging) {\n            rows = [];\n            for (var i = 0; i < childRecords.length; i++) {\n                var rowIndex = this.grid.getRowIndexByPrimaryKey(childRecords[i][primaryKeyField]);\n                rows.push(this.getRows()[rowIndex]);\n            }\n        }\n        else {\n            rows = gridRows.filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            if (!isNullOrUndefined(rows[i])) {\n                rows[i].style.display = displayAction;\n            }\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function () {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = 'none';\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     *\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, the TreeGrid filters the records with exact match. if false, it filters\n     * case insensitive records (uppercase and lowercase letters are treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent is set to true,\n     * then filter ignores diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for filter column.\n     * @returns {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     *\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @returns {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     *\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     *\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     *\n     * @returns {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     *\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     * @returns {void}\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     *\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     * @returns {void}\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     *\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @returns {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     *\n     * @returns {Element[]} - Returns selected row elements collection\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     *\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @returns {Element} - Returns movable cell element from the indexes passed\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     *\n     * @returns {Element[]} - Returns element collection of movable rows\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     *\n     * @param  {number} index - Specifies the row index.\n     * @returns {Element} - Returns movable row based on index passed\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     *\n     * @returns {Element[]}: Returns movable row element\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * Gets the number of frozen column in tree grid\n     *\n     * @hidden\n     * @returns {number} - Returns frozen column count\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0) + this.frozenColumns;\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var j = 0, len = cols.length; j < len; j++) {\n            if (cols[j].columns) {\n                cnt = this.getFrozenCount(cols[j].columns, cnt);\n            }\n            else {\n                if (cols[j].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     *\n     * @returns {number[]} - Returns selected rows index collection\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     *\n     * @returns {ISelectedCell[]} - Returns selected cell's index details\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     *\n     * @isGenericType true\n     * @returns {Object[]} - Returns selected records collection\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     *\n     * @returns {{baseModule: Data, treeModule: DataManipulation}}: Returns grid and treegrid data module\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @param {number[]} fromIndexes - Source indexes of rows\n     * @param {number} toIndex - Destination index of row\n     * @param {string} position - Defines drop position as above or below or child\n     * @returns {void}\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableImmutableMode\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableInfiniteScrolling\", void 0);\n    __decorate([\n        Complex({}, InfiniteScrollSettings)\n    ], TreeGrid.prototype, \"infiniteScrollSettings\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n *\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Reorder(parent) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Reorder module name\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n *\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     *\n     * @param  {string|string[]} fName - Defines the field name.\n     * @returns {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Resize module name\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend, getValue, removeClass, addClass } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n *\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     *\n     * @returns {void}\n     * @param {number[]} fromIndexes - source indexes of rows to be re-ordered\n     * @param {number} toIndex - Destination row index\n     * @param {string} position - Drop position as above or below or child\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && ['above', 'below', 'child'].indexOf(position) !== -1) {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.grid.refresh();\n            if (this.parent.enableImmutableMode && this.dropPosition === 'middleSegment') {\n                var index = this.parent.treeColumnIndex + 1;\n                var row = this.parent.getRows()[fromIndexes[0]];\n                var dropData = args.data[0];\n                var totalRecord = [];\n                var rows = [];\n                totalRecord.push(dropData);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                var parentData = getParentData(this.parent, args.data[0][parentUniqueID]);\n                var parentrow = this.parent.getRows()[toIndex];\n                totalRecord.push(parentData);\n                rows.push(parentrow);\n                for (var i = 0; i < totalRecord.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: totalRecord[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n            }\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        if (isNullOrUndefined(this.parent.idMapping)) {\n                            parentRecord.childRecords.splice(index, 1);\n                            if (!parentRecord.childRecords.length) {\n                                parentRecord.hasChildRecords = false;\n                                parentRecord.hasFilteredChildRecords = false;\n                            }\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!isNullOrUndefined(tObj.parentIdMapping)) {\n                    tObj.childMapping = null;\n                }\n                if (!isNullOrUndefined(draggedRecord_1.taskData) &&\n                    !Object.prototype.hasOwnProperty.call(draggedRecord_1.taskData, tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.childMapping) &&\n                    (draggedRecord_1[tObj.childMapping]).length && !this.isDraggedWithChild &&\n                    !isNullOrUndefined(tObj.parentIdMapping)) {\n                    var childData = (draggedRecord_1[tObj.childMapping]);\n                    for (var j = 0; j < childData.length; j++) {\n                        if (dragRecords_1.indexOf(childData[j]) === -1) {\n                            dragRecords_1.splice(j, 0, childData[j]);\n                            childData[j].taskData = extend({}, childData[j]);\n                            i += 1;\n                        }\n                    }\n                }\n                if (Object.prototype.hasOwnProperty.call(draggedRecord_1, tObj.parentIdMapping) && draggedRecord_1[tObj.parentIdMapping] != null\n                    && !this.isDraggedWithChild) {\n                    draggedRecord_1.taskData[tObj.parentIdMapping] = null;\n                    delete draggedRecord_1.parentItem;\n                    delete draggedRecord_1.parentUniqueID;\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n            }\n            tObj.setProperties({ dataSource: tObj.dataSource }, false);\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n                this.treeData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n                this.treeData = this.parent.dataSource;\n            }\n            if (isNullOrUndefined(this.dropPosition)) {\n                this.dropPosition = 'bottomSegment';\n                // eslint-disable-next-line max-len\n                args.dropIndex = this.parent.getCurrentViewRecords().length > 1 ? this.parent.getCurrentViewRecords().length - 1 : args.dropIndex;\n                args.data = args.data.map(function (i) {\n                    if (i.hasChildRecords && isNullOrUndefined(i.parentItem)) {\n                        i.level = 0;\n                        return i;\n                    }\n                    else {\n                        delete i.parentItem;\n                        delete i.parentUniqueID;\n                        i.level = 0;\n                        return i;\n                    }\n                });\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        // eslint-disable-next-line max-len\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem) && !isNullOrUndefined(droppedRecord.taskData)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position\n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        rowTop = rowPositionHeight + contentHeight + roundOff;\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var rowElement = [];\n                var element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var rowElement = [];\n        var element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        var parentItem = 'parentItem';\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.grid.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n        if (this.parent.enableImmutableMode && !this.parent.allowPaging && !isNullOrUndefined(args.data[0][parentItem])) {\n            var index = this.parent.treeColumnIndex;\n            index = index + 1;\n            var primaryKeyField = this.parent.getPrimaryKeyFieldNames()[0];\n            var rowIndex = this.parent.grid.getRowIndexByPrimaryKey(args.data[0][primaryKeyField]);\n            var row = this.parent.getRows()[rowIndex];\n            var data = args.data[0];\n            if (this.dropPosition === 'middleSegment') {\n                var record = [];\n                var rows = [];\n                record.push(data);\n                rows.push(row);\n                var parentUniqueID = 'parentUniqueID';\n                data = getParentData(this.parent, args.data[0][parentUniqueID]);\n                rowIndex = this.parent.grid.getRowIndexByPrimaryKey(data[primaryKeyField]);\n                var parentrow = this.parent.getRows()[rowIndex];\n                record.push(data);\n                rows.push(parentrow);\n                for (var i = 0; i < record.length; i++) {\n                    this.parent.renderModule.cellRender({\n                        data: record[i], cell: rows[i].cells[index],\n                        column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                        requestType: 'rowDragAndDrop'\n                    });\n                }\n                var targetEle = parentrow.getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n            else {\n                this.parent.renderModule.cellRender({\n                    data: data, cell: row.cells[index],\n                    column: this.parent.grid.getColumns()[this.parent.treeColumnIndex],\n                    requestType: 'rowDragAndDrop'\n                });\n            }\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            if (this.parent.idMapping != null && (isNullOrUndefined(this.dropPosition) || this.dropPosition === 'bottomSegment')) {\n                var actualData = [];\n                for (var i = 0; i < records.length; i++) {\n                    if (records[i].hasChildRecords) {\n                        actualData.push(records[i]);\n                        var child = records[i].childRecords;\n                        for (var i_1 = 0; i_1 < child.length; i_1++) {\n                            actualData.push(child[i_1]); // push child records to drop the parent record along with its child records\n                        }\n                        records = actualData;\n                    }\n                }\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            var srcControlFlatData = srcControl.rowDragAndDropModule.treeGridData;\n            if (!isNullOrUndefined(srcControlFlatData)) {\n                for (var i = 0; i < srcControlFlatData.length; i++) {\n                    srcControlFlatData[i].index = i;\n                    if (!isNullOrUndefined(srcControlFlatData[i].parentItem)) {\n                        var actualIndex = getValue('uniqueIDCollection.' + srcControlFlatData[i].parentUniqueID + '.index', srcControl);\n                        srcControlFlatData[i].parentItem.index = actualIndex;\n                    }\n                }\n            }\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.grid.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.grid.refresh();\n            srcControl.grid.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                args.dropIndex = args.dropIndex === args.fromIndex ? this.getTargetIdx(args.target.parentElement) : args.dropIndex;\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            if (!isNullOrUndefined(this.parent.idMapping)) {\n                dragRecords.reverse();\n            }\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    if (this.draggedRecord === this.droppedRecord) {\n                        var correctIndex = this.getTargetIdx(args.target.offsetParent.parentElement);\n                        if (isNaN(correctIndex)) {\n                            correctIndex = this.getTargetIdx(args.target.parentElement);\n                        }\n                        args.dropIndex = correctIndex;\n                        droppedRecord = this.droppedRecord = this.parent.getCurrentViewRecords()[args.dropIndex];\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        if (isNullOrUndefined(droppedRecord.parentItem)) {\n                            delete draggedRecord.parentItem;\n                            draggedRecord.level = 0;\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = null;\n                            }\n                        }\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                            if (this.parent.parentIdMapping) {\n                                draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                                draggedRecord.parentItem = droppedRecord.parentItem;\n                                draggedRecord.level = droppedRecord.level;\n                            }\n                        }\n                    }\n                    this.dropMiddle(recordIndex1);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex + 1 :\n            childRecords.length + recordIndex + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords) || droppedRecord.childRecords.length === 0) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            setValue('uniqueIDCollection.' + currentRecord.uniqueID, currentRecord, this.parent);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            if (isNullOrUndefined(parentData) && !isNullOrUndefined(record.parentItem)) {\n                parentData = record.parentItem;\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_2 = 0; i_2 < treeGridData.length; i_2++) {\n                if (treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_2;\n                }\n            }\n            for (var i_3 = 0; i_3 < this.treeGridData.length; i_3++) {\n                if (this.treeGridData[i_3][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_3;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var _this = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    _this.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    _this.dropPosition = 'Invalid';\n                    _this.addErrorElem();\n                    _this.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns RowDragAndDrop module name\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\n/**\n * RowModelGenerator is used to generate grid data rows.\n *\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n *\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Filter module name\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *\n     * @param {{data: Object} } dataDetails - Filtered data collection\n     * @param {Object} dataDetails.data - Fliltered data collection\n     * @hidden\n     * @returns {void}\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && Object.prototype.hasOwnProperty.call(uniqueIDValue, parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!Object.prototype.hasOwnProperty.call(uniqueIDValue, childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData, getExpandStatus } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n *\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ExcelExport(parent) {\n        this.isCollapsedStatePersist = false;\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ExcelExport module name\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* eslint-disable-next-line */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        if (!isNullOrUndefined(excelExportProperties)) {\n            this.isCollapsedStatePersist = excelExportProperties.isCollapsedStatePersist;\n        }\n        return new Promise(function (resolve) {\n            var dm = _this.isLocal() && !(dataSource instanceof DataManager) ? new DataManager(dataSource)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal()) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     *\n     * @param {ExcelQueryCellInfoEventArgs} args - current cell details\n     * @hidden\n     * @returns {void}\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                var expandedStatus = false;\n                var sublevelState = false;\n                var state = getExpandStatus(this.parent, excelrowobj, this.parent.parentData);\n                if (this.isCollapsedStatePersist && (!state || !this.parent.isLocalData)) {\n                    expandedStatus = true;\n                    sublevelState = excelrowobj.expanded ? false : true;\n                }\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: sublevelState,\n                    isHidden: expandedStatus };\n            }\n        }\n    };\n    /* eslint-disable-next-line */\n    ExcelExport.prototype.finalPageSetup = function (workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n *\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} PdfExport module name\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     *\n     * @returns {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve) {\n            var dm = isLocal && !(dtSrc instanceof DataManager) ? new DataManager(dtSrc)\n                : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        setValue('isPdfExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.isCollapsedStatePersist)) {\n            setValue('isCollapsedStatePersist', prop.isCollapsedStatePersist, args);\n        }\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     *\n     * @param {PdfQueryCellInfoEventArgs} args - Current cell details\n     * @hidden\n     * @returns {void}\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n *\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Pager module name\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     *\n     * @returns {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     *\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @returns {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     *\n     * @param  {string} message - Defines the message to update.\n     * @returns {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @param {{action: string, row: HTMLTableRowElement, record: ITreeData, args: RowCollapsedEventArgs}} rowDetails - Expand Collapse details arguments\n     * @param {string} rowDetails.action - Expand Collapse action type\n     * @param {HTMLTableRowElement} rowDetails.row - Row element\n     * @param {ITreeData} rowDetails.record - Row object data\n     * @param {RowCollapsedEventArgs} rowDetails.args - Expand Collapse event arguments\n     * @hidden\n     * @returns {void}\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n        if (this.parent.enableImmutableMode) {\n            var row = 'row';\n            var action = 'action';\n            var targetEle = void 0;\n            if (ret[action] === 'collapse') {\n                targetEle = ret[row].getElementsByClassName('e-treegridexpand')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridexpand');\n                    addClass([targetEle], 'e-treegridcollapse');\n                }\n            }\n            else if (ret[action] === 'expand') {\n                targetEle = ret[row].getElementsByClassName('e-treegridcollapse')[0];\n                if (!isNullOrUndefined(targetEle)) {\n                    removeClass([targetEle], 'e-treegridcollapse');\n                    addClass([targetEle], 'e-treegridexpand');\n                }\n            }\n        }\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent) && ((this.parent.searchSettings.key !== this.parent.grid.searchSettings.key) ||\n                (this.parent.filterSettings.columns.length !== this.parent.grid.filterSettings.columns.length))) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n *\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Toolbar module name\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     *\n     * @returns {Element} - Returns Toolbar element\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     *\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @returns {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n *\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Summary module name\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *\n     * @param {QueryOptions[]} summaryQuery - DataManager query for aggregate operations\n     * @param {Object[]} filteredData - Filtered data collection\n     * @param {boolean} isSort - Specified whether sorting operation performed\n     * @hidden\n     * @returns {Object[]} -  return flat records with summary values\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        if (this.parent.aggregates.filter(function (x) { return x.showChildSummary; }).length) {\n            for (var i = 0, len = dataLength; i < len; i++) {\n                parentRecord = parentRecords[i];\n                childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n                if (childRecordsLength) {\n                    var _loop_1 = function (summaryRowIndex, len_1) {\n                        var item = void 0;\n                        item = {};\n                        for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                            var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                                this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                            item[field] = null;\n                        }\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                            var idx_1;\n                            flatRecords.map(function (e, i) {\n                                if (e.uniqueID === parentRecord.uniqueID) {\n                                    idx_1 = i;\n                                    return;\n                                }\n                            });\n                            var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                            var summaryParent = extend({}, parentRecord);\n                            delete summaryParent.childRecords;\n                            delete summaryParent[this_1.parent.childMapping];\n                            setValue('parentItem', summaryParent, item);\n                            var level = getObject('level', summaryParent);\n                            setValue('level', level + 1, item);\n                            setValue('isSummaryRow', true, item);\n                            setValue('parentUniqueID', summaryParent.uniqueID, item);\n                            if (isSort) {\n                                var childRecords = getObject('childRecords', parentRecord);\n                                if (childRecords.length) {\n                                    childRecords.push(item);\n                                }\n                            }\n                            flatRecords.splice(currentIndex, 0, item);\n                        }\n                        else {\n                            return \"continue\";\n                        }\n                    };\n                    var this_1 = this;\n                    for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                        _loop_1(summaryRowIndex, len_1);\n                    }\n                    this.flatChildRecords = [];\n                }\n            }\n        }\n        else {\n            var items = {};\n            for (var columnIndex = 0, length_1 = columnLength; columnIndex < length_1; columnIndex++) {\n                var fields = isNullOrUndefined(getObject('field', this.parent.columns[columnIndex])) ?\n                    this.parent.columns[columnIndex] : getObject('field', this.parent.columns[columnIndex]);\n                items[fields] = null;\n            }\n            for (var summaryRowIndex = 1, length_2 = summaryLength; summaryRowIndex <= length_2; summaryRowIndex++) {\n                this.createSummaryItem(items, this.parent.aggregates[summaryRowIndex - 1]);\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    if (this.flatChildRecords.length) {\n                        itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                    }\n                    else if (this.parent.isLocalData) {\n                        var data = this.parent.dataSource instanceof DataManager ? this.parent.dataSource.dataSource.json\n                            : this.parent.flatData;\n                        itemData[key] = this.getSummaryValues(summary.columns[i], data);\n                    }\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        if (this.parent.isReact) {\n            var renderReactTemplates = 'renderReactTemplates';\n            tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property, '', null, null, cellElement);\n            this.parent[renderReactTemplates]();\n        }\n        else {\n            appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        }\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n *\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Sort module name\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     *\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @returns {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     *\n     * @returns {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n *\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnMenu module name\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, select } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n *\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = select('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow', args.element);\n        var editRecord = select('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit', args.element);\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ContextMenu module name\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     *\n     * @returns {Element} Return Context Menu root element.\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n *\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n        this.parent.grid.on('immutable-batch-cancel', this.immutableBatchAction, this);\n        this.parent.grid.on('next-cell-index', this.nextCellIndex, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n        this.parent.grid.off('immutable-batch-cancel', this.immutableBatchAction);\n        this.parent.grid.off('next-cell-index', this.nextCellIndex);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     * @returns {Object[]} Returns modified records in batch editing.\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns index of newly add row\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns selected row index\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     * @returns {number} Returns newly added child count\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var indexvalue = void 0;\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            var parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!Object.prototype.hasOwnProperty.call(added, 'level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function () {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        var row = [];\n        var records = [];\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.grid.renderModule.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = Object.hasOwnProperty.call(args, 'updatedRecords') ? args.updatedRecords : this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            if (this.batchAddRowRecord.length === 0) {\n                this.batchAddRowRecord.push(this.parent.flatData[args.index]);\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    BatchEdit.prototype.immutableBatchAction = function (e) {\n        e.args.cancel = true;\n        var changes = this.parent.grid.getBatchChanges();\n        var addedRecords = [];\n        var index = 'index';\n        if (Object.keys(changes).length) {\n            addedRecords = changes.addedRecords;\n        }\n        for (var i = 0; i < addedRecords.length; i++) {\n            e.rows.splice(addedRecords[i][index], 1);\n        }\n    };\n    BatchEdit.prototype.nextCellIndex = function (args) {\n        var index = 'index';\n        var rowIndex = 'rowIndex';\n        args[index] = this.parent.getSelectedRows()[0][rowIndex];\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isCountRequired, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Edit module name\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.grid.on('recordAdded', this.customCellSave, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off('recordAdded', this.customCellSave);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     *\n     * @returns {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @param {Column[]} cols - Column property Collection\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.enableInfiniteScrolling && eventName === 'actionComplete') {\n            this.infiniteAddAction(eventArgs);\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.infiniteAddAction = function (args) {\n        if ((args.requestType === 'save' && args.action === 'add') || args.requestType === 'delete') {\n            if (this.parent.editSettings.newRowPosition !== 'Top' && this.selectedIndex !== -1\n                && (args.requestType === 'save' && args.action === 'add')) {\n                var rowObjects = this.parent.grid.getRowsObject();\n                var newRowObject = rowObjects.splice(0, 1)[0];\n                var newRowObjectIndex = this.addRowIndex;\n                var currentData = this.parent.getCurrentViewRecords();\n                if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                    newRowObjectIndex += findChildrenRecords(currentData[newRowObjectIndex + 1]).length;\n                }\n                newRowObjectIndex = this.parent.editSettings.newRowPosition === 'Below' ? newRowObjectIndex + 1 : newRowObjectIndex;\n                rowObjects.splice(newRowObjectIndex, 0, newRowObject);\n                var newRecord = currentData.splice(0, 1)[0];\n                currentData.splice(newRowObjectIndex, 0, newRecord);\n                this.updateInfiniteCurrentViewData(newRecord, this.addRowIndex);\n            }\n            var movableRows = this.parent.grid.getMovableRows();\n            var movableRowsObject = this.parent.grid.getMovableRowsObject();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (!isCache) {\n                resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n                this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            }\n            if (!isCache && this.parent.getFrozenColumns() > 0) {\n                resetRowIndex(this.parent.grid, movableRowsObject, movableRows, 0);\n                this.updateIndex(this.parent.grid.dataSource, movableRows, this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    Edit.prototype.updateInfiniteCurrentViewData = function (newRecord, newRowIndex) {\n        var _this = this;\n        var infiniteData = 'infiniteCurrentViewData';\n        var updateCurrentViewData = 'updateCurrentViewData';\n        var size = Math.ceil(newRowIndex / this.parent.grid.pageSettings.pageSize);\n        var page = size > 0 ? size : 1;\n        var dataIndex = newRowIndex - ((page - 1) * this.parent.pageSettings.pageSize);\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        infiniteCurrentViewData[1].splice(0, 1);\n        var data = infiniteCurrentViewData[page];\n        if (!isNullOrUndefined(this.addRowRecord)) {\n            data.filter(function (e, index) {\n                if (e.uniqueID === _this.addRowRecord.uniqueID) {\n                    dataIndex = index;\n                }\n            });\n            if (this.addRowRecord.hasChildRecords && this.addRowRecord.childRecords.length &&\n                this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                dataIndex += findChildrenRecords(this.addRowRecord).length;\n            }\n        }\n        if (dataIndex >= this.parent.pageSettings.pageSize) {\n            page += 1;\n            data = infiniteCurrentViewData[page];\n            dataIndex = dataIndex - this.parent.pageSettings.pageSize >= 0 ? dataIndex - this.parent.pageSettings.pageSize : 0;\n        }\n        dataIndex = this.parent.editSettings.newRowPosition === 'Below' ? dataIndex + 1 : dataIndex;\n        data.splice(dataIndex, 0, newRecord);\n        this.parent.grid.infiniteScrollModule[updateCurrentViewData]();\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            this.parent.editSettings.allowEditing && column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-summarycell'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function () {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var treeCell = this.parent.getCellFromIndex(cellDetails.rowIndex, this.parent.treeColumnIndex);\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.customCellSave = function (args) {\n        if (isCountRequired(this.parent) && this.parent.editSettings.mode === 'Cell' && args.action === 'edit') {\n            this.updateCell(args, args.rowIndex);\n            this.afterCellSave(args, args.row, args.rowIndex);\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        var _this = this;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row_1;\n            if (isNullOrUndefined(args.cell)) {\n                row_1 = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row_1 = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row_1)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row_1) === -1 && (this.parent.getFrozenColumns() > 0)) ?\n                    this.parent.grid.getMovableRows().indexOf(row_1) : this.parent.getRows().indexOf(row_1);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row_1 = this.parent.grid.getRows()[row_1.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row_1.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                if (!isRemoteData(this.parent) &&\n                    !(this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    if (isCountRequired(this.parent)) {\n                        var eventPromise = 'eventPromise';\n                        var editArgs = { requestType: 'save', data: args.rowData, action: 'edit', row: row_1,\n                            rowIndex: rowIndex_1, rowData: args.rowData, columnName: args.columnName,\n                            filterChoiceCount: null, excelSearchOperator: null };\n                        this.parent.grid.getDataModule()[eventPromise](editArgs, this.parent.grid.query);\n                    }\n                    else {\n                        this.updateCell(args, rowIndex_1);\n                        this.afterCellSave(args, row_1, rowIndex_1);\n                    }\n                }\n                else if (isRemoteData(this.parent) ||\n                    (this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n                    var query = this.parent.grid.query;\n                    var crud = null;\n                    crud = this.parent.grid.dataSource.update(primaryKeys_1[0], args.rowData, query.fromTable, query, args.previousValue);\n                    crud.then(function (e) {\n                        if (!isNullOrUndefined(e)) {\n                            args.rowData[args.columnName] = e[args.columnName];\n                        }\n                        _this.updateCell(args, rowIndex_1);\n                        _this.afterCellSave(args, row_1, rowIndex_1);\n                    });\n                }\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.afterCellSave = function (args, row, rowIndex) {\n        var mRow;\n        if (this.parent.grid.aggregateModule) {\n            this.parent.grid.aggregateModule.refresh(args.rowData);\n        }\n        this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n        this.parent.grid.editModule.formObj.destroy();\n        if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        this.enableToolbarItems('save');\n        if (this.parent.getFrozenColumns() > 0) {\n            mRow = this.parent.grid.getMovableRows()[rowIndex];\n            removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n            removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        }\n        removeClass([row], ['e-editedrow', 'e-batchrow']);\n        removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n        if (this.parent['isCellSaveFocus'] !== false) {\n            this.parent.grid.focusModule.restoreFocus();\n        }\n        editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n        if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'enter') {\n            this.keyPress = null;\n        }\n        var saveArgs = {\n            type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n            previousData: args.previousValue, row: row, target: args.cell\n        };\n        this.parent.trigger(events.actionComplete, saveArgs);\n    };\n    Edit.prototype.lastCellTab = function () {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            if (!this.parent.editSettings.allowNextRowEdit) {\n                this.updateGridEditMode('Normal');\n                this.isOnBatch = false;\n                this.keyPress = null;\n            }\n            else {\n                this.enableToolbarItems('edit');\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        var treeColIndex = this.parent.treeColumnIndex;\n        if (this.parent.getFrozenColumns() > 0) {\n            var cells = rows[0].querySelectorAll('.e-rowcell');\n            for (var l = 0; l < cells.length; l++) {\n                if (cells[l].classList.contains('e-gridrowindex0level0')) {\n                    treeColIndex = l;\n                    break;\n                }\n            }\n        }\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[treeColIndex];\n            if (!isNullOrUndefined(treecell)) {\n                for (var l = 0; l < treecell.classList.length; l++) {\n                    var value = treecell.classList[l];\n                    var remove = /e-gridrowindex/i;\n                    var removed = /e-griddetailrowindex/i;\n                    var result = value.match(remove);\n                    var results = value.match(removed);\n                    if (result != null) {\n                        removeClass([treecell], value);\n                    }\n                    if (results != null) {\n                        removeClass([treecell], value);\n                    }\n                }\n                if (!rows[k].classList.contains('e-detailrow')) {\n                    addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n                }\n                else {\n                    addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n                }\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function () {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                if (this.parent.editSettings.mode === 'Batch') {\n                    this.parent.grid.contentModule[r].splice(0, 1);\n                    this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                }\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    if (this.parent.editSettings.mode === 'Batch') {\n                        this.parent.grid.contentModule[frows].splice(0, 1);\n                        this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    }\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function () {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    if (this.selectedIndex >= 0) {\n                        value.level = level + 1;\n                    }\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (!this.isSelfReference && !isNullOrUndefined(data) && Object.hasOwnProperty.call(data, this.parent.childMapping)) {\n            var addRecords = [];\n            var previousEditMode = this.parent.editSettings.mode;\n            var previousGridEditMode = this.parent.grid.editSettings.mode;\n            addRecords.push(data);\n            this.parent.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: 'Batch' } }, true);\n            if (!isNullOrUndefined(position)) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            var updatedRecords = { addedRecords: addRecords, changedRecords: [], deletedRecords: [] };\n            this.parent.notify(events.batchSave, { updatedRecords: updatedRecords, index: index });\n            this.parent.setProperties({ editSettings: { mode: previousEditMode } }, true);\n            this.parent.grid.setProperties({ editSettings: { mode: previousGridEditMode } }, true);\n            this.parent.refresh();\n        }\n        else {\n            if (data) {\n                if (index > -1) {\n                    this.selectedIndex = index;\n                    this.addRowIndex = index;\n                }\n                else {\n                    this.selectedIndex = this.parent.selectedRowIndex;\n                    this.addRowIndex = this.parent.selectedRowIndex;\n                }\n                if (position) {\n                    this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n                }\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n            else {\n                this.parent.grid.editModule.addRecord(data, index);\n            }\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     *\n     * @returns {boolean} Returns form validation results\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     *\n     * @returns {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n *\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns CommandColumn module name\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n *\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns DetailRow module name\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        var data = args.data;\n        var row = args.detailElement.parentElement.previousSibling;\n        var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n        var expandClass = 'e-gridrowindex' + index + 'level' + data.level;\n        var classlist = row.querySelector('.' + expandClass).classList;\n        var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass); });\n        var newNo = gridClas[0].length;\n        var slicedclas = gridClas.toString().slice(6, newNo);\n        var detailClass = 'e-griddetail' + slicedclas;\n        addClass([args.detailElement.parentElement], detailClass);\n    };\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue, Browser } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { isCountRequired } from '../utils';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        /** @hidden */\n        _this.isDataSourceChanged = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 10) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        if (this.isDataSourceChanged) {\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.addEventListener('dataBound', this.dataBoundEvent.bind(this));\n            this.parent.addEventListener('rowSelected', this.rowSelectedEvent.bind(this));\n            this.parent[action]('select-virtual-Row', this.toSelectVirtualRow, this);\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n            this.parent[action]('select-row-on-context-open', this.toSelectRowOnContextOpen, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n            }\n            if ((!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') || this.isDataSourceChanged) {\n                this.contents.scrollTop = 0;\n                this.isDataSourceChanged = false;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || !isCountRequired(this.parent)) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.dataBoundEvent = function () {\n        var dataBoundEve = 'dataBound';\n        var initialRowTop = 'initialRowTop';\n        if (this.parent.getRows().length && !this[initialRowTop]) {\n            this[initialRowTop] = this.parent.getRowByIndex(0).getBoundingClientRect().top;\n        }\n        _super.prototype[dataBoundEve].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.rowSelectedEvent = function (args) {\n        var rowSelected = 'rowSelected';\n        _super.prototype[rowSelected].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectVirtualRow = function (args) {\n        var selectVirtualRow = 'selectVirtualRow';\n        _super.prototype[selectVirtualRow].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.toSelectRowOnContextOpen = function (args) {\n        var selectRowOnContextOpen = 'selectRowOnContextOpen';\n        _super.prototype[selectRowOnContextOpen].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            viewInfo.event = viewInfo.event === 'refresh-virtual-block' ? 'model-changed' : viewInfo.event;\n            this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && !this.parent.dataSource.dataSource.offline && this.parent.dataSource.dataSource.url !== '') || isCountRequired(this.parent)) {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            this.virtualEle.setWrapperWidth(null, (Browser.isIE || Browser.info.name === 'edge'));\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off('select-virtual-Row', this.toSelectVirtualRow);\n        this.parent.off('dataBound', this.dataBoundEvent);\n        this.parent.off('rowSelected', this.rowSelectedEvent);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n        this.parent.off('select-row-on-context-open', this.toSelectRowOnContextOpen);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll\n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n            return;\n        }*/\n            /*if(delta > 45 || delta < -45){\n          this.isWheeling = true;\n        }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","/* eslint-disable */
var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n *\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns VirtualScroll module name\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        this.parent.grid.clearSelection();\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering' || requestType === 'collapseAll' ||\n                (requestType === 'refresh' && this.parent.enableCollapseAll && endIndex > visualData.length)) {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.getContent().firstElementChild.scrollTop = 0;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) &&\n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.getModuleName = function () {\n        return 'treeVirtualScroll';\n    };\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n *\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function () {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns Freeze module name\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n *\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance.\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     *\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @returns {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     *\n     * @function destroy\n     * @returns {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} Returns ColumnChooser module name\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n","import { Grid, InfiniteScroll as GridInfiniteScroll } from '@syncfusion/ej2-grids';\nimport { RowRenderer, resetRowIndex } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined, remove } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { findChildrenRecords } from '../utils';\n/**\n * TreeGrid Infinite Scroll module will handle Infinite Scrolling.\n *\n * @hidden\n */\nvar InfiniteScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     *\n     * @param {TreeGrid} parent - Tree Grid instance\n     */\n    function InfiniteScroll(parent) {\n        this.parent = parent;\n        Grid.Inject(GridInfiniteScroll);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     *\n     * @private\n     * @returns {string} - Returns Logger module name\n     */\n    InfiniteScroll.prototype.getModuleName = function () {\n        return 'infiniteScroll';\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.addEventListener = function () {\n        this.parent.on(events.pagingActions, this.infinitePageAction, this);\n        this.parent.on('infinite-remote-expand', this.infiniteRemoteExpand, this);\n        this.parent.grid.on('delete-complete', this.infiniteDeleteHandler, this);\n        this.parent.grid.on('infinite-edit-handler', this.infiniteEditHandler, this);\n        this.parent.grid.on('infinite-crud-cancel', this.createRows, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n    };\n    /**\n     * @hidden\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('infinite-remote-expand', this.infiniteRemoteExpand);\n        this.parent.grid.off('delete-complete', this.infiniteDeleteHandler);\n        this.parent.grid.off('infinite-edit-handler', this.infiniteEditHandler);\n        this.parent.off(events.pagingActions, this.infinitePageAction);\n        this.parent.grid.off('infinite-crud-cancel', this.createRows);\n        this.parent.grid.off('content-ready', this.contentready);\n    };\n    /**\n     * Handles the Expand Collapse action for Remote data with infinite scrolling.\n     *\n     * @param {{ index: number, childData: ITreeData[] }} args - expanded row index and its child data\n     * @param { number } args.index - expanded row index\n     * @param { ITreeData[] } args.childData - child data of expanded row\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteRemoteExpand = function (args) {\n        var rowObjects = this.parent.grid.getRowsObject();\n        var locator = 'serviceLocator';\n        var generateRows = 'generateRows';\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var rows = this.parent.getRows();\n        var position = args.index === rows.length - 1 ? 'after' : 'before';\n        var cols = this.parent.grid.getColumns();\n        var childRowObjects = this.parent.grid.infiniteScrollModule[generateRows](args.childData, args);\n        var childRowElements = [];\n        for (var i = 0; i < childRowObjects.length; i++) {\n            childRowElements.push(rowRenderer.render(childRowObjects[i], cols));\n        }\n        rowObjects.splice.apply(rowObjects, [args.index + 1, 0].concat(childRowObjects));\n        for (var i = 0; i < childRowElements.length; i++) {\n            if (position === 'after') {\n                rows[args.index + i][position](childRowElements[i]);\n            }\n            else {\n                rows[args.index + i + 1][position](childRowElements[i]);\n            }\n            rows.splice(args.index + 1 + i, 0, childRowElements[i]);\n        }\n        resetRowIndex(this.parent.grid, this.parent.grid.getRowsObject(), this.parent.grid.getRows(), 0);\n    };\n    /**\n     * Resetted the row index for expand collapse action for cache support.\n     *\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.contentready = function () {\n        if (this.parent.infiniteScrollSettings.enableCache && !isNullOrUndefined(this.parent.editModule)) {\n            var updateIndex = 'updateIndex';\n            this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.getFrozenColumns()) {\n                this.parent.editModule[updateIndex](this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n            }\n        }\n    };\n    /**\n     * Handles the page query for Data operations and CRUD actions.\n     *\n     * @param {{ result: ITreeData[], count: number, actionArgs: object }} pageingDetails - data, its count and action details\n     * @param {ITreeData[]} pageingDetails.result - data on scroll action\n     * @param {number} pageingDetails.count - data count on scroll action\n     * @param {Object} pageingDetails.actionArgs - scroll action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infinitePageAction = function (pageingDetails) {\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var visualData = dm.executeLocal(new Query().where(expanded));\n        var actionArgs = getValue('actionArgs', pageingDetails.actionArgs);\n        var actions = getValue('actions', this.parent.grid.infiniteScrollModule);\n        var initial = actions.some(function (value) { return value === actionArgs.requestType; });\n        var initialRender = initial ? true : this.parent.initialRender ? true : false;\n        this.visualData = visualData;\n        pageingDetails.count = visualData.length;\n        if (getValue('isPrinting', pageingDetails.actionArgs)) {\n            pageingDetails.result = visualData;\n        }\n        else {\n            var query = new Query();\n            var isCache = this.parent.infiniteScrollSettings.enableCache;\n            if (isCache && this.parent.infiniteScrollSettings.initialBlocks > this.parent.infiniteScrollSettings.maxBlocks) {\n                this.parent.infiniteScrollSettings.initialBlocks = this.parent.infiniteScrollSettings.maxBlocks;\n            }\n            var size = initialRender ?\n                this.parent.pageSettings.pageSize * this.parent.infiniteScrollSettings.initialBlocks :\n                this.parent.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (!isNullOrUndefined(actionArgs)) {\n                var lastIndex = getValue('lastIndex', this.parent.grid.infiniteScrollModule);\n                var firstIndex = getValue('firstIndex', this.parent.grid.infiniteScrollModule);\n                if (!isCache && actionArgs.requestType === 'delete') {\n                    var skip = lastIndex - actionArgs.data.length + 1;\n                    var take = actionArgs.data.length;\n                    query = query.skip(skip).take(take);\n                }\n                else if (isCache && actionArgs.requestType === 'delete' ||\n                    (actionArgs.requestType === 'save' && actionArgs.action === 'add')) {\n                    query = query.skip(firstIndex);\n                    query = query.take(this.parent.infiniteScrollSettings.initialBlocks * this.parent.pageSettings.pageSize);\n                }\n                else {\n                    query = query.page(current, size);\n                }\n            }\n            else {\n                query = query.page(current, size);\n            }\n            dm.dataSource.json = visualData;\n            if (!isCache && !isNullOrUndefined(actionArgs) && actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                pageingDetails.result = [actionArgs.data];\n            }\n            else {\n                pageingDetails.result = dm.executeLocal(query);\n            }\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * Handles the currentviewdata for delete operation.\n     *\n     * @param {{ e: InfiniteScrollArgs, result: Object[] }} args - Scroller and data details\n     * @param {InfiniteScrollArgs} args.e -  scroller details while CRUD\n     * @param {Object[]} args.result - data details while CRUD\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteEditHandler = function (args) {\n        var infiniteData = 'infiniteCurrentViewData';\n        var infiniteCurrentViewData = this.parent.grid.infiniteScrollModule[infiniteData];\n        var keys = Object.keys(infiniteCurrentViewData);\n        if (args.e.requestType === 'delete' && args.result.length > 1) {\n            for (var i = 1; i < args.result.length; i++) {\n                infiniteCurrentViewData[keys[keys.length - 1]].push(args.result[i]);\n            }\n        }\n        if (args.e.requestType === 'save' && getValue('action', args.e) === 'add'\n            && this.parent.editSettings.newRowPosition === 'Child') {\n            args.result[0].level += 1;\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {ActionEventArgs} args - crud action details\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.infiniteDeleteHandler = function (args) {\n        if (args.requestType === 'delete') {\n            var rows = this.parent.grid.getRowsObject();\n            var rowElms = this.parent.getRows();\n            var data = args.data instanceof Array ? args.data : [args.data];\n            var keyField = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            this.removeRows(rowElms, rows, data, keyField, true);\n            if (this.parent.getFrozenColumns() > 0) {\n                var mRows = this.parent.grid.getMovableRowsObject();\n                var mRowElms = this.parent.grid.getMovableRows();\n                this.removeRows(mRowElms, mRows, data, keyField);\n            }\n        }\n    };\n    /**\n     * Handles the row objects for delete operation.\n     *\n     * @param {Element[]} rowElms - row elements\n     * @param {Row<Column>[]} rows - Row object collection\n     * @param {Object[]} data - data collection\n     * @param {string} keyField - primary key name\n     * @param { boolean} isFrozen - Specifies whether frozen column enabled\n     * @returns {void}\n     */\n    InfiniteScroll.prototype.removeRows = function (rowElms, rows, data, keyField, isFrozen) {\n        var _this = this;\n        var resetInfiniteCurrentViewData = 'resetInfiniteCurrentViewData';\n        var _loop_1 = function (i) {\n            rows.filter(function (e, index) {\n                if (e.data[keyField] === data[i][keyField]) {\n                    if (isFrozen) {\n                        var page = Math.ceil((index + 1) / _this.parent.grid.pageSettings.pageSize);\n                        _this.parent.grid.infiniteScrollModule[resetInfiniteCurrentViewData](page, index);\n                    }\n                    rows.splice(index, 1);\n                    remove(rowElms[index]);\n                    rowElms.splice(index, 1);\n                }\n            });\n        };\n        for (var i = 0; i < data.length; i++) {\n            _loop_1(i);\n        }\n    };\n    /**\n     * Handles the row objects for Add operation.\n     */\n    InfiniteScroll.prototype.createRows = function (eventArgs) {\n        var locator = 'serviceLocator';\n        var actionArgs = eventArgs.args.e;\n        var row = eventArgs.row;\n        var serviceLocator = this.parent.grid.infiniteScrollModule[locator];\n        var rowRenderer = new RowRenderer(serviceLocator, null, this.parent.grid);\n        var tbody;\n        var currentData = this.parent.getCurrentViewRecords();\n        var currentRows = eventArgs.isMovable ? this.parent.grid.getMovableRows()\n            : this.parent.grid.getDataRows();\n        if (eventArgs.isFrozenRight) {\n            tbody = this.parent.element.querySelector('.e-frozen-right-content').querySelector('tbody');\n        }\n        else {\n            tbody = !this.parent.grid.isFrozenGrid() ? this.parent.getContent().querySelector('tbody') : eventArgs.isMovable\n                ? this.parent.grid.getMovableVirtualContent().querySelector('tbody')\n                : this.parent.grid.getFrozenVirtualContent().querySelector('tbody');\n        }\n        if (this.parent.frozenRows) {\n            tbody = eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType !== 'add'\n                || !eventArgs.isFrozenRows && this.parent.grid.infiniteScrollModule.requestType === 'add'\n                ? !this.parent.grid.isFrozenGrid() ? this.parent.getHeaderContent().querySelector('tbody')\n                    : eventArgs.isMovable ? this.parent.grid.getMovableVirtualHeader().querySelector('tbody')\n                        : eventArgs.isFrozenRight ? this.parent.element.querySelector('.e-frozen-right-header').querySelector('tbody')\n                            : this.parent.grid.getFrozenVirtualHeader().querySelector('tbody') : tbody;\n        }\n        var position;\n        var addRowIndex = 'addRowIndex';\n        var newRowIndex = this.parent.editModule[addRowIndex];\n        for (var i = 0; i < row.length; i++) {\n            var newRow = rowRenderer.render(row[i], this.parent.grid.getColumns());\n            if (actionArgs.requestType === 'save' && actionArgs.action === 'add') {\n                if (getValue('selectedIndex', this.parent.editModule) !== -1 && this.parent.editSettings.newRowPosition !== 'Top') {\n                    if (this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child') {\n                        position = 'after';\n                        newRowIndex += findChildrenRecords(currentData[newRowIndex + 1]).length;\n                        if (this.parent.editSettings.newRowPosition === 'Child') {\n                            newRowIndex -= 1; //// for child position already child record is added in childRecords so subtracting 1\n                        }\n                        currentRows[newRowIndex][position](newRow);\n                    }\n                    else if (this.parent.editSettings.newRowPosition === 'Above') {\n                        position = 'before';\n                        currentRows[this.parent.editModule[addRowIndex]][position](newRow);\n                    }\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    tbody.appendChild(newRow);\n                }\n                else {\n                    tbody.insertBefore(newRow, tbody.firstElementChild);\n                }\n            }\n            else if (actionArgs.requestType === 'delete') {\n                tbody.appendChild(newRow);\n            }\n        }\n        eventArgs.cancel = true;\n    };\n    /**\n     * To destroy the infiniteScroll module\n     *\n     * @returns {void}\n     * @hidden\n     */\n    InfiniteScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return InfiniteScroll;\n}());\nexport { InfiniteScroll };\n","import * as index from './index';\nindex.TreeGrid.Inject(index.Filter, index.Page, index.Sort, index.Reorder, index.Toolbar, index.Aggregate, index.Resize, index.ColumnMenu, index.ExcelExport, index.PdfExport, index.CommandColumn, index.ContextMenu, index.Edit, index.Selection, index.VirtualScroll, index.DetailRow, index.RowDD, index.Freeze, index.ColumnChooser, index.Logger, index.InfiniteScroll);\nexport * from './index';\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","taskData","requireFilter","isHidden","el","style","window","getComputedStyle","display","visibility","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","addAction","Array","extend","newRowPosition","k","prototype","hasOwnProperty","call","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","currentViewRecords","getCurrentViewRecords","unshift","primaryKeys","currentdata","isChildAll","editRowIndex","updateCurrentViewData","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","index_2","treeColumnIndex","allowRowDragAndDrop","enableImmutableMode","renderModule","cellRender","cell","cells","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","DOC_URL","BASE_DOC_URL","isRowDDEnabled","Logger","Grid","Inject","GridLogger","getModuleName","log","types","args","type","item","detailLists","cOp","check","success","message","generateMessage","replace","gridurl","substring","treeGridObj","dataStateChange","console","logType","treeLog","treeGrid","isPrimaryKey","treeGridDetails","mapping_fields_missing","opt","ERROR","TreeClipboard","_this","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","createCheckBox","label","add","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","checkBoxRecord","checkAll","rec","currentRecord","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","GridPrint","printTreeGrid","printGrid","gridElement","queryCellInfo","rowDataBound","beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","reactTemplateRender","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByUid","summaryRow","frozenColumns","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","field","rowTemplate","treeColumn","colindex","template","templateCompiler","textContent","appendChildren","children","tempID","element","id","isReact","result","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","loadChildOnDemand","getUid","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","childRecord","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","getRowsObject","haveChild","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","notifyArgs","enableInfiniteScrolling","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","filterQuery","searchQuery","results","fltrQuery","srchQuery","filteredData","gridQuery_1","srtQry","srt","getColumnByField","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","actArgs","actualResults","dataResult","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","InfiniteScrollSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","objectEqualityChecker","old","current","isEqual","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","injectedModules","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","parentTarget","summaryElement","expandAll","collapseAll","expandCollapseRequest","parentElement","findnextRowElement","selectRow","cellIndex","row_1","clearSelection","findPreviousRowElement","rIndex","cIndex","summaryRowElement","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","loggerModule","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","gridRequiredModules","appendTo","renderComplete","destroyTemplateFn","clearTemplate","afterGridRender","clipboardModule","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","infiniteScrollSettings","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","triggerEvents","bindGridEvents","rowSelecting","rowSelected","rowDeselected","resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","recordDoubleClick","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","TreeLogger","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","lastRowBorder","visiblerow","isAddBorder","isPixelHeight","dataBound","updateRowTemplate","updateAltRow","req","totalRows","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","toolbarClick","callBackPromise","toolbarargs","cellSelecting","cellselectingArgs","beginEdit","begineditArgs","isExpandRefresh","cellSave","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","cellsaveArgs","cellSaved","cellEdit","promise","batchAdd","beforeBatchSave","beforeBatchAdd","batchDelete","beforeBatchDelete","batchCancel","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","actionBegin","actionComplete","updateTreeGridModel","detailDataBound","contextMenuClick","contextMenuOpen","rowDragStartHelper","rowDragStart","rowDrag","isEdit","rowDrop","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","allowNextRowEdit","dialog","text","getConstant","tooltipText","Search","prefixIcon","isEmptyColumnModel","treeGridColumn","gridColumn","gridColumnCollection","_i","_a","onPropertyChanged","newProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","isDataSourceChanged","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","ignoreOnColumn","currentObject","ignoreInArrays","addOnPersist","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","getCellFromIndex","iterateArrayOrObject","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","gridColumns","stackedHeader","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","selectionModule","getVisibleRecords","visibleRecords","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","collapseRow","expandRow","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","setHeightForFrozenContent","refreshScrollOffset","collapsingArgs","firstElementChild","scrollHeight","scrollTop","getRowHeight","scrollBy","expandAtLevel","getRecordDetails","collapseAtLevel","startIndex","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","remoteExpand","localExpand","sHeight","clientHeight","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","primaryKeyField","getMovableRows","visibleRowCount","gridRow","rcell","arg","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","rowDropped","rowsAdded","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","dropData","totalRecord","parentrow","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","targetRow","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","left","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","fromIndex","getTargetIdx","srcControl","targetIndex","isNaN","actualData","srcControlFlatData","actualIndex","selectedRecord","isByMethod","isMultipleGrid","dragLength","reverse","correctIndex","offsetParent","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","parentIndex","deletedRecordCount","i_2","i_3","draggedRecords","TreeVirtualRowModelGenerator","getDatas","visualData","generateRows","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","isCollapsedStatePersist","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","isLocal","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","expandedStatus","sublevelState","state","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","this_1","t","res","pageingDetails","propname","skip","size","pageSize","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","dataLength","showChildSummary","getChildRecordsLength","summaryRowIndex","len_1","len_2","createSummaryItem","idx_1","currentIndex","summaryParent","length_2","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchSave","batchPageAction","batchCancelAction","immutableBatchAction","nextCellIndex","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleteUniqueID","positionIndex","updatedRecords","primarykey_1","addRecords","totalRecords","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","crudAction","beginAdd","keyPressed","lastCellTab","contentready","editActionEvents","gridDblClick","customCellSave","savePreviousRowPosition","beforeStartEdit","beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","infiniteAddAction","rowObjects","newRowObject","newRowObjectIndex","newRecord","updateInfiniteCurrentViewData","movableRowsObject","getMovableRowsObject","isCache","enableCache","resetRowIndex","updateIndex","newRowIndex","dataIndex","infiniteCurrentViewData","infiniteScrollModule","isOnBatch","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","treeCell","afterCellSave","form","rowIndex_1","primaryKeys_1","isTabLastRow","update","fromTable","previousValue","editArgs","filterChoiceCount","excelSearchOperator","mRow","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","data1","treeColIndex","l","data2","treecell","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","previousEditMode","previousGridEditMode","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","virtualOtherAction","indexModifier","setTop","nextSetResIndex","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","dataBoundEvent","rowSelectedEvent","toSelectVirtualRow","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","toSelectRowOnContextOpen","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","virtualEle","setWrapperWidth","isIE","name","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","setTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","GridVirtualScroll","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y","InfiniteScroll","GridInfiniteScroll","infinitePageAction","infiniteRemoteExpand","infiniteDeleteHandler","infiniteEditHandler","createRows","serviceLocator","rowRenderer","RowRenderer","childRowObjects","childRowElements","initialBlocks","maxBlocks","firstIndex","rowElms","keyField","removeRows","mRowElms","tbody","currentRows","isMovable","isFrozenRight","isFrozenGrid","getMovableVirtualContent","getFrozenVirtualContent","isFrozenRows","getMovableVirtualHeader","getFrozenVirtualHeader","newRow","index.TreeGrid","index.Filter","index.Page","index.Sort","index.Reorder","index.Toolbar","index.Aggregate","index.Resize","index.ColumnMenu","index.ExcelExport","index.PdfExport","index.CommandColumn","index.ContextMenu","index.Edit","index.Selection","index.VirtualScroll","index.DetailRow","index.RowDD","index.Freeze","index.ColumnChooser","index.Logger","index.InfiniteScroll"],"mappings":"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E,IACIc,WAAS,IACVyY,EAASje,UAAW,oBAAiB,IACxC0E,IACIc,WAAS,aACVyY,EAASje,UAAW,eAAY,IACnC0E,IACIc,gBACDyY,EAASje,UAAW,cAAW,IAClC0E,IACIc,WAAS,OACVyY,EAASje,UAAW,mBAAgB,IACvC0E,IACIc,WAAS,OACVyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,WAAS,IACVyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,WAAS,OACVyY,EAASje,UAAW,gBAAa,IACpC0E,IACIc,WAAS,OACVyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,wBAAqB,IAC5C0E,IACIc,WAAS,OACVyY,EAASje,UAAW,yBAAsB,IAC7C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,0BAAuB,IAC9C0E,IACIc,gBACDyY,EAASje,UAAW,iBAAc,IACrC0E,IACIc,cACDyY,EAASje,UAAW,YAAS,IAChC0E,IACIc,cACDyY,EAASje,UAAW,iBAAc,IACrC0E,IACIc,WAAS,aACVyY,EAASje,UAAW,gBAAa,IACpC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,kBAAe,IACtC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,wBAAqB,IAC5C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,oBAAiB,IACxC0E,IACI8zB,aAAY5yB,IACbqY,EAASje,UAAW,uBAAoB,IAC3C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,yBAAsB,IAC7C0E,IACI8zB,aAAYvc,IACbgC,EAASje,UAAW,mBAAgB,IACvC0E,IACI8zB,aAAYC,oBACbxa,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,cACDyY,EAASje,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,qBAAkB,IACzC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,wBAAqB,IAC5C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,wBAAqB,IAC5C0E,IACI8zB,aAAYza,KACbE,EAASje,UAAW,mBAAgB,IACvC0E,IACIiB,gBAAeiY,KAChBK,EAASje,UAAW,iBAAc,IACrC0E,IACI8zB,aAAY3a,KACbI,EAASje,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,qBAAkB,IACzC0E,IACIc,cACDyY,EAASje,UAAW,qBAAkB,IACzC0E,IACI8zB,aAAY9yB,IACbuY,EAASje,UAAW,qBAAkB,IACzC0E,IACI8zB,aAAY7nB,IACbsN,EAASje,UAAW,qBAAkB,IACzC0E,IACIc,cACDyY,EAASje,UAAW,cAAW,IAClC0E,IACIc,cACDyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,WAAS,YACVyY,EAASje,UAAW,gBAAa,IACpC0E,IACIc,cACDyY,EAASje,UAAW,uBAAoB,IAC3C0E,IACIc,cACDyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIc,cACDyY,EAASje,UAAW,kBAAe,IACtC0E,IACIc,WAAS,WACVyY,EAASje,UAAW,wBAAqB,IAC5C0E,IACIc,WAAS,OACVyY,EAASje,UAAW,gBAAa,IACpC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,mBAAgB,IACvC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,kBAAe,IACtC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,qBAAkB,IACzC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,0BAAuB,IAC9C0E,IACIc,WAAS,SACVyY,EAASje,UAAW,aAAU,IACjC0E,IACIc,WAAS,SACVyY,EAASje,UAAW,YAAS,IAChC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,2BAAwB,IAC/C0E,IACIc,YAAS,IACVyY,EAASje,UAAW,8BAA2B,IAClD0E,IACI8zB,aAAYxa,KACbC,EAASje,UAAW,6BAA0B,IACjD0E,IACIc,WAAS,QACVyY,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,cAAW,IAClC0E,IACIg0B,WACDza,EAASje,UAAW,WAAQ,IAC/B0E,IACIg0B,WACDza,EAASje,UAAW,gBAAa,IACpC0E,IACIg0B,WACDza,EAASje,UAAW,eAAY,IACnC0E,IACIg0B,WACDza,EAASje,UAAW,iBAAc,IACrC0E,IACIg0B,WACDza,EAASje,UAAW,gBAAa,IACpC0E,IACIg0B,WACDza,EAASje,UAAW,eAAY,IACnC0E,IACIg0B,WACDza,EAASje,UAAW,gBAAa,IACpC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,gBAAa,IACpC0E,IACIg0B,WACDza,EAASje,UAAW,eAAY,IACnC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,wBAAqB,IAC5C0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,eAAY,IACnC0E,IACIg0B,WACDza,EAASje,UAAW,oBAAiB,IACxC0E,IACIg0B,WACDza,EAASje,UAAW,gBAAa,IACpC0E,IACIg0B,WACDza,EAASje,UAAW,wBAAqB,IAC5C0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,wBAAqB,IAC5C0E,IACIg0B,WACDza,EAASje,UAAW,mBAAgB,IACvC0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,oBAAiB,IACxC0E,IACIc,YAAS,IACVyY,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,mBAAgB,IACvC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,oBAAiB,IACxC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,oBAAiB,IACxC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,mBAAgB,IACvC0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,eAAY,IACnC0E,IACIg0B,WACDza,EAASje,UAAW,iBAAc,IACrC0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,iBAAc,IACrC0E,IACIg0B,WACDza,EAASje,UAAW,iBAAc,IACrC0E,IACIg0B,WACDza,EAASje,UAAW,qBAAkB,IACzC0E,IACIg0B,WACDza,EAASje,UAAW,oBAAiB,IACxC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,mBAAgB,IACvC0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,sBAAmB,IAC1C0E,IACIg0B,WACDza,EAASje,UAAW,uBAAoB,IAC3C0E,IACIg0B,WACDza,EAASje,UAAW,iBAAc,IACrC0E,IACIg0B,WACDza,EAASje,UAAW,kBAAe,IACtC0E,IACIg0B,WACDza,EAASje,UAAW,cAAW,IAClC0E,IACIg0B,WACDza,EAASje,UAAW,mBAAgB,IACvC0E,IACIg0B,WACDza,EAASje,UAAW,yBAAsB,IAC7C0E,IACIg0B,WACDza,EAASje,UAAW,cAAW,IAClC0E,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"}
